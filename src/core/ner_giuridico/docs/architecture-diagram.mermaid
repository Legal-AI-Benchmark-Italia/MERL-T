classDiagram
    class EntityManager {
        +add_entity_type()
        +update_entity_type()
        +remove_entity_type()
        +get_entity_type()
        +add_observer()
    }
    
    class Entity {
        +text: string
        +type: string
        +start_char: int
        +end_char: int
        +normalized_text: string
        +metadata: dict
        +to_dict()
    }
    
    class NERGiuridico {
        +preprocessor
        +rule_based_recognizer
        +transformer_recognizer
        +normalizer
        +entity_manager
        +process(text)
        +batch_process(texts)
    }
    
    class RuleBasedRecognizer {
        +entity_manager
        +recognize(text)
        +update_patterns(entity_type, patterns)
    }
    
    class TransformerRecognizer {
        +recognize(text)
        +fine_tune(training_data)
    }
    
    class EntityNormalizer {
        +entity_manager
        +normalize(entity)
        +register_normalizer(entity_type, func)
    }
    
    class API {
        +get_ner_system()
        +recognize_entities()
        +batch_recognize_entities()
    }
    
    class AnnotationInterface {
        +entity_manager
        +setup()
        +get_entity_label_config()
    }
    
    NERGiuridico --> EntityManager : uses
    NERGiuridico --> RuleBasedRecognizer : uses
    NERGiuridico --> TransformerRecognizer : uses
    NERGiuridico --> EntityNormalizer : uses
    RuleBasedRecognizer --> EntityManager : uses
    EntityNormalizer --> EntityManager : uses
    API --> NERGiuridico : uses
    AnnotationInterface --> EntityManager : uses
    Entity --> EntityManager : managed by
